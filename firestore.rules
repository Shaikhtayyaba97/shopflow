
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function getUserRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }

    match /users/{userId} {
      allow read: if isAuth() && request.auth.uid == userId;
    }

    match /products/{productId} {
      // Admins and Shopkeepers can read product lists and individual products.
      allow get, list: if isAuth() && getUserRole(request.auth.uid) in ['admin', 'shopkeeper'];
      
      // Admins and Shopkeepers can create products.
      allow create: if isAuth() && getUserRole(request.auth.uid) in ['admin', 'shopkeeper'];

      // Admins can update any field.
      // Shopkeepers can update any field EXCEPT purchasePrice.
      allow update: if isAuth() && 
                    (getUserRole(request.auth.uid) == 'admin' ||
                     (getUserRole(request.auth.uid) == 'shopkeeper' && !('purchasePrice' in request.resource.data)));
      
      // Only admins can delete products.
      allow delete: if isAuth() && getUserRole(request.auth.uid) == 'admin';
    }

    match /sales/{saleId} {
       // Authenticated users (shopkeepers, admins) can create sales.
      allow create: if isAuth();

      // Only admins can read sales data for reports.
      allow read: if isAuth() && getUserRole(request.auth.uid) == 'admin';
    }
  }
}
