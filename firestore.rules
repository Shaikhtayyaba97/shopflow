
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users Collection
    // - Admins can read/write any user profile.
    // - Authenticated users can only read their own profile.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Products Collection
    // - Admins can read/write any product.
    // - Shopkeepers can read all products.
    // - Shopkeepers can create products.
    // - Shopkeepers can update products, BUT cannot change the purchasePrice.
    match /products/{productId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                    (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' || 
                     (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'shopkeeper' && 
                      !('purchasePrice' in request.resource.data) || request.resource.data.purchasePrice == resource.data.purchasePrice));
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Sales Collection
    // - Any authenticated user can create sales (checkout).
    // - Any authenticated user can read all sales.
    // - Any authenticated user can update a sale to mark an item as returned.
    // - Admins can delete sales records.
    match /sales/{saleId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null; // Allows marking items as returned
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
